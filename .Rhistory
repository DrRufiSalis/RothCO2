function #Effects of moisture on decomposition rates according to the RothC model
###Calculates the effects of moisture (precipitation and pan evaporation) on decomposition rates according to the RothC model.
##references<< Coleman, K., and D. S. Jenkinson (1999), RothC-26.3 A model for the turnover of carbon in soil:
##model description and windows user guide (modified 2008), 47 pp, IACR Rothamsted, Harpenden.
(P,           ##<< A vector with monthly precipitation (mm).
E,           ##<< A vector with same length with open pan evaporation or evapotranspiration (mm).
S.Thick=23,  ##<< Soil thickness in cm. Default for Rothamsted is 23 cm.
pClay=23.4,  ##<< Percent clay.
pE=0.75,     ##<< Evaporation coefficient. If open pan evaporation is used pE=0.75. If Potential evaporation is used, pE=1.0.
bare=FALSE   ##<< Logical. Under bare soil conditions, bare=TRUE. Dafault is set under vegetated soil.
)
{
B=ifelse(bare == FALSE,1,1.8)
Max.TSMD=-(20+1.3*pClay-0.01*(pClay^2))*(S.Thick/23)*(1/B)
M=P-E*pE
Acc.TSMD=NULL
for(i in 2:length(M)){
Acc.TSMD[1]=ifelse(M[1] > 0, 0, M[1])
if(Acc.TSMD[i-1]+M[i] < 0){
Acc.TSMD[i]=Acc.TSMD[i-1]+M[i]
}
else(Acc.TSMD[i]=0)
if(Acc.TSMD[i]<=Max.TSMD) {
Acc.TSMD[i]=Max.TSMD
}
}
b=ifelse(Acc.TSMD > 0.444*Max.TSMD,1,(0.2+0.8*((Max.TSMD-Acc.TSMD)/(Max.TSMD-0.444*Max.TSMD))))
return(data.frame(Acc.TSMD,b))
### A data.frame with accumulated top soil moisture deficit
### (Acc.TSMD) and the rate modifying factor b.
}
,
ex=function(){
P=c(74,59,62,51,52,57,34,55,58,56,75,71) #Monthly Precipitation (mm)
E=c(8,10,27,49,83,99,103,91,69,34,16,8)  #Monthly open pan evaporation (mm)
Rothamsted=fW.RothC(P,E)
data.frame(month.name,P,E,0.75*E,P-0.75*E,Rothamsted)
# This reproduces Table 1 in the RothC documentation (Coleman and Jenkinson 1999)
}
)
#
# vim:set ff=unix expandtab ts=2 sw=2:
fW.RothC<- structure(
function #Effects of moisture on decomposition rates according to the RothC model
###Calculates the effects of moisture (precipitation and pan evaporation) on decomposition rates according to the RothC model.
##references<< Coleman, K., and D. S. Jenkinson (1999), RothC-26.3 A model for the turnover of carbon in soil:
##model description and windows user guide (modified 2008), 47 pp, IACR Rothamsted, Harpenden.
(P,           ##<< A vector with monthly precipitation (mm).
E,           ##<< A vector with same length with open pan evaporation or evapotranspiration (mm).
S.Thick=23,  ##<< Soil thickness in cm. Default for Rothamsted is 23 cm.
pClay=23.4,  ##<< Percent clay.
pE=0.75,     ##<< Evaporation coefficient. If open pan evaporation is used pE=0.75. If Potential evaporation is used, pE=1.0.
bare=FALSE   ##<< Logical. Under bare soil conditions, bare=TRUE. Dafault is set under vegetated soil.
)
{
B=ifelse(bare == FALSE,1,1.8)
Max.TSMD=-(20+1.3*pClay-0.01*(pClay^2))*(S.Thick/23)*(1/B)
M=P-E*pE
Acc.TSMD=NULL
for(i in 2:length(M)){
Acc.TSMD[1]=ifelse(M[1] > 0, 0, M[1])
if(Acc.TSMD[i-1]+M[i] < 0){
Acc.TSMD[i]=Acc.TSMD[i-1]+M[i]
}
else(Acc.TSMD[i]=0)
if(Acc.TSMD[i]<=Max.TSMD) {
Acc.TSMD[i]=Max.TSMD
}
}
b=ifelse(Acc.TSMD > 0.444*Max.TSMD,1,(0.2+0.8*((Max.TSMD-Acc.TSMD)/(Max.TSMD-0.444*Max.TSMD))))
return(data.frame(Acc.TSMD,b))
### A data.frame with accumulated top soil moisture deficit
### (Acc.TSMD) and the rate modifying factor b.
}
,
ex=function(){
P=c(74,59,62,51,52,57,34,55,58,56,75,71) #Monthly Precipitation (mm)
E=c(8,10,27,49,83,99,103,91,69,34,16,8)  #Monthly open pan evaporation (mm)
Rothamsted=fW.RothC(P,E)
data.frame(month.name,P,E,0.75*E,P-0.75*E,Rothamsted)
# This reproduces Table 1 in the RothC documentation (Coleman and Jenkinson 1999)
}
)
#
# vim:set ff=unix expandtab ts=2 sw=2:
fW.RothC<-
function #Effects of moisture on decomposition rates according to the RothC model
###Calculates the effects of moisture (precipitation and pan evaporation) on decomposition rates according to the RothC model.
##references<< Coleman, K., and D. S. Jenkinson (1999), RothC-26.3 A model for the turnover of carbon in soil:
##model description and windows user guide (modified 2008), 47 pp, IACR Rothamsted, Harpenden.
(P,           ##<< A vector with monthly precipitation (mm).
E,           ##<< A vector with same length with open pan evaporation or evapotranspiration (mm).
S.Thick=23,  ##<< Soil thickness in cm. Default for Rothamsted is 23 cm.
pClay=23.4,  ##<< Percent clay.
pE=0.75,     ##<< Evaporation coefficient. If open pan evaporation is used pE=0.75. If Potential evaporation is used, pE=1.0.
bare=FALSE   ##<< Logical. Under bare soil conditions, bare=TRUE. Dafault is set under vegetated soil.
)
{
B=ifelse(bare == FALSE,1,1.8)
Max.TSMD=-(20+1.3*pClay-0.01*(pClay^2))*(S.Thick/23)*(1/B)
M=P-E*pE
Acc.TSMD=NULL
for(i in 2:length(M)){
Acc.TSMD[1]=ifelse(M[1] > 0, 0, M[1])
if(Acc.TSMD[i-1]+M[i] < 0){
Acc.TSMD[i]=Acc.TSMD[i-1]+M[i]
}
else(Acc.TSMD[i]=0)
if(Acc.TSMD[i]<=Max.TSMD) {
Acc.TSMD[i]=Max.TSMD
}
}
b=ifelse(Acc.TSMD > 0.444*Max.TSMD,1,(0.2+0.8*((Max.TSMD-Acc.TSMD)/(Max.TSMD-0.444*Max.TSMD))))
return(data.frame(Acc.TSMD,b))
### A data.frame with accumulated top soil moisture deficit
### (Acc.TSMD) and the rate modifying factor b.
}
,
fW.RothC<-
function #Effects of moisture on decomposition rates according to the RothC model
###Calculates the effects of moisture (precipitation and pan evaporation) on decomposition rates according to the RothC model.
##references<< Coleman, K., and D. S. Jenkinson (1999), RothC-26.3 A model for the turnover of carbon in soil:
##model description and windows user guide (modified 2008), 47 pp, IACR Rothamsted, Harpenden.
(P,           ##<< A vector with monthly precipitation (mm).
E,           ##<< A vector with same length with open pan evaporation or evapotranspiration (mm).
S.Thick=23,  ##<< Soil thickness in cm. Default for Rothamsted is 23 cm.
pClay=23.4,  ##<< Percent clay.
pE=0.75,     ##<< Evaporation coefficient. If open pan evaporation is used pE=0.75. If Potential evaporation is used, pE=1.0.
bare=FALSE   ##<< Logical. Under bare soil conditions, bare=TRUE. Dafault is set under vegetated soil.
)
{
B=ifelse(bare == FALSE,1,1.8)
Max.TSMD=-(20+1.3*pClay-0.01*(pClay^2))*(S.Thick/23)*(1/B)
M=P-E*pE
Acc.TSMD=NULL
for(i in 2:length(M)){
Acc.TSMD[1]=ifelse(M[1] > 0, 0, M[1])
if(Acc.TSMD[i-1]+M[i] < 0){
Acc.TSMD[i]=Acc.TSMD[i-1]+M[i]
}
else(Acc.TSMD[i]=0)
if(Acc.TSMD[i]<=Max.TSMD) {
Acc.TSMD[i]=Max.TSMD
}
}
b=ifelse(Acc.TSMD > 0.444*Max.TSMD,1,(0.2+0.8*((Max.TSMD-Acc.TSMD)/(Max.TSMD-0.444*Max.TSMD))))
return(data.frame(Acc.TSMD,b))
### A data.frame with accumulated top soil moisture deficit
### (Acc.TSMD) and the rate modifying factor b.
}
#
# vim:set ff=unix expandtab ts=2 sw=2:
fW2.RothC<- structure(
function #Effects of moisture on decomposition rates according to the RothC model
###Calculates the effects of moisture (precipitation and pan evaporation) on decomposition rates according to the RothC model.
##references<< Coleman, K., and D. S. Jenkinson (1999), RothC-26.3 A model for the turnover of carbon in soil:
##model description and windows user guide (modified 2008), 47 pp, IACR Rothamsted, Harpenden.
(P,           ##<< A vector with monthly precipitation (mm).
E,           ##<< A vector with same length with open pan evaporation or evapotranspiration (mm).
S.Thick=23,  ##<< Soil thickness in cm. Default for Rothamsted is 23 cm.
pClay=23.4,  ##<< Percent clay.
pE=0.75,     ##<< Evaporation coefficient. If open pan evaporation is used pE=0.75. If Potential evaporation is used, pE=1.0.
bare=FALSE   ##<< Logical. Under bare soil conditions, bare=TRUE. Dafault is set under vegetated soil.
)
{
B=ifelse(bare == FALSE,1,1.8)
Max.TSMD=-(20+1.3*pClay-0.01*(pClay^2))*(S.Thick/23)*(1/B)
M=P-E*pE
Acc.TSMD=NULL
for(i in 2:length(M)){
Acc.TSMD[1]=ifelse(M[1] > 0, 0, M[1])
if(Acc.TSMD[i-1]+M[i] < 0){
Acc.TSMD[i]=Acc.TSMD[i-1]+M[i]
}
else(Acc.TSMD[i]=0)
if(Acc.TSMD[i]<=Max.TSMD) {
Acc.TSMD[i]=Max.TSMD
}
}
b=ifelse(Acc.TSMD > 0.444*Max.TSMD,1,(0.2+0.8*((Max.TSMD-Acc.TSMD)/(Max.TSMD-0.444*Max.TSMD))))
return(data.frame(Acc.TSMD,b))
### A data.frame with accumulated top soil moisture deficit
### (Acc.TSMD) and the rate modifying factor b.
}
,
ex=function(){
P=c(74,59,62,51,52,57,34,55,58,56,75,71) #Monthly Precipitation (mm)
E=c(8,10,27,49,83,99,103,91,69,34,16,8)  #Monthly open pan evaporation (mm)
Rothamsted=fW.RothC(P,E)
data.frame(month.name,P,E,0.75*E,P-0.75*E,Rothamsted)
# This reproduces Table 1 in the RothC documentation (Coleman and Jenkinson 1999)
}
)
devtools::document()
fT.RothC_2.0<-structure(
function
(Temp
)
{
47.9/(1+exp(106/(ifelse(Temp >= -18.3, Temp, NA)+18.3)))
}
,
ex=function(){
Temperature=0:50
plot(Temperature,fT.RothC(Temperature),type="l",ylab="f(T) (unitless)",
main="Effects of temperature on decomposition rates according to the RothC model")
}
)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
Model_list_VC <- list.files(pattern="ModelDFSL_*C")
ModelDFSL_VLC0C <- c(1,2)
ModelDFSL_VLC1C <- c(1,5)
Model_list_VC <- list.files(pattern="ModelDFSL_*C")
Model_list_VC <- list.files(pattern="ModelDFSL_*")
dfs <- Filter(function(x) is(x, "data.frame"), mget(ls()))
library(readxl)
COICOP_CPC_1_0 <- read_excel("C:/Users/marti/2.-0 LCA team Dropbox/2.-0 LCA consultants/Ducky - CO2 COICOP/Correspondence_Tables/COICOP - CPC 1.0.xls")
View(COICOP_CPC_1_0)
library(readr)
CPC_2_0_CPC_2_1 <- read_csv("C:/Users/marti/2.-0 LCA team Dropbox/2.-0 LCA consultants/Ducky - CO2 COICOP/Correspondence_Tables/CPC_2.0-CPC_2.1.csv")
View(CPC_2_0_CPC_2_1)
library(readr)
exiobase4_nace2 <- read_csv("C:/Users/marti/2.-0 LCA team Dropbox/2.-0 LCA consultants/Ducky - CO2 COICOP/Correspondence_Tables/exiobase4_nace2.csv")
View(exiobase4_nace2)
dfs <- Filter(function(x) is(x, "data.frame"), mget(ls()))
View(dfs)
do.call(rbins, dfs)
do.call(rbind, dfs)
names(which(unlist(eapply(.GlobalEnv,is.data.frame))))
list123 <- names(which(unlist(eapply(.GlobalEnv,is.data.frame))))
list123 <- as.list(names(which(unlist(eapply(.GlobalEnv,is.data.frame)))))
View(list123)
Model_list_VC <- list(
#VXC Models; Litter, Conventional Tillage, 0-100% (+10%) Clay
ModelDFSL_VLC0C,
ModelDFSL_VLC1C,
ModelDFSL_VLC2C,
ModelDFSL_VLC3C,
ModelDFSL_VLC4C,
ModelDFSL_VLC5C,
ModelDFSL_VLC6C,
ModelDFSL_VLC7C,
ModelDFSL_VLC8C,
ModelDFSL_VLC9C,
ModelDFSL_VLC10C,
#VXC Models; Litter, Reduced Tillage, 0-100% (+10%) Clay
ModelDFSL_VLR0C,
ModelDFSL_VLR1C,
ModelDFSL_VLR2C,
ModelDFSL_VLR3C,
ModelDFSL_VLR4C,
ModelDFSL_VLR5C,
ModelDFSL_VLR6C,
ModelDFSL_VLR7C,
ModelDFSL_VLR8C,
ModelDFSL_VLR9C,
ModelDFSL_VLR10C,
#VXC Models; Litter, No Tillage, 0-100% (+10%) Clay
ModelDFSL_VLN0C,
ModelDFSL_VLN1C,
ModelDFSL_VLN2C,
ModelDFSL_VLN3C,
ModelDFSL_VLN4C,
ModelDFSL_VLN5C,
ModelDFSL_VLN6C,
ModelDFSL_VLN7C,
ModelDFSL_VLN8C,
ModelDFSL_VLN9C,
ModelDFSL_VLN10C,
#VXC Models; Litter, Conventional Tillage, 0-100% (+10%) Clay
ModelDFSL_VMC0C,
ModelDFSL_VMC1C,
ModelDFSL_VMC2C,
ModelDFSL_VMC3C,
ModelDFSL_VMC4C,
ModelDFSL_VMC5C,
ModelDFSL_VMC6C,
ModelDFSL_VMC7C,
ModelDFSL_VMC8C,
ModelDFSL_VMC9C,
ModelDFSL_VMC10C,
#VXC Models; Litter, Reduced Tillage, 0-100% (+10%) Clay
ModelDFSL_VMR0C,
ModelDFSL_VMR1C,
ModelDFSL_VMR2C,
ModelDFSL_VMR3C,
ModelDFSL_VMR4C,
ModelDFSL_VMR5C,
ModelDFSL_VMR6C,
ModelDFSL_VMR7C,
ModelDFSL_VMR8C,
ModelDFSL_VMR9C,
ModelDFSL_VMR10C,
#VXC Models; Litter, No Tillage, 0-100% (+10%) Clay
ModelDFSL_VMN0C,
ModelDFSL_VMN1C,
ModelDFSL_VMN2C,
ModelDFSL_VMN3C,
ModelDFSL_VMN4C,
ModelDFSL_VMN5C,
ModelDFSL_VMN6C,
ModelDFSL_VMN7C,
ModelDFSL_VMN8C,
ModelDFSL_VMN9C,
ModelDFSL_VMN10C
)
Model_list_VC <- list(
#VXC Models; Litter, Conventional Tillage, 0-100% (+10%) Clay
ModelDFSL_VLC0C,
ModelDFSL_VLC1C)
View(Model_list_VC)
#merge all data frames together
MergedModels_VC <- Model_list_VC %>% reduce(full_join, by='MNumber')
# Function to filter data frames
is_dataframe <- function(x) {
exists(x, envir = .GlobalEnv) && is.data.frame(get(x, envir = .GlobalEnv))
}
# Filter the list to include only data frames from the global environment
filtered_list <- Filter(is_dataframe, Model_list_VC)
# Filter the list to include only data frames from the global environment
filtered_list <- keep(Model_list_VC, ~ exists(.x, envir = .GlobalEnv) && is.data.frame(get(.x, envir = .GlobalEnv)))
# Filter the list to include only data frames from the global environment
filtered_list <- purrr::keep(Model_list_VC, ~ exists(.x, envir = .GlobalEnv) && is.data.frame(get(.x, envir = .GlobalEnv)))
View(Model_list_VC)
Model_list_VC <- as.list(names(which(unlist(eapply(.GlobalEnv,is.data.frame)))))
View(Model_list_VC)
# Filter the list to include only data frames from the global environment
filtered_list <- purrr::keep(Model_list_VC, ~ exists(.x, envir = .GlobalEnv) && is.data.frame(get(.x, envir = .GlobalEnv)))
View(filtered_list)
devtools::document()
devtools::document()
??write.csv
??write.csv
devtools::document()
load_all()
devtools::document()
devtools::document()
devtools::load_all()
Set_Temp()
Set_Temp()
Set_Evp()
devtools::document()
devtools::load_all()
SoilR2.0::Set_Temp()
SoilR2.0::Set_Precip()
SoilR2.0::Set_Evp()
SoilR2.0::Run_RothC_All()
devtools::document()
SoilR2.0::Run_RothC_VLC()
devtools::document()
devtools::load_all()
Run_RothC_VLC()
Run_RothC_VLC()
devtools::document()
load_all()
Run_RothC_VLC()
devtools::document()
devtools::load_all()
Run_RothC_VLC()
dir.create(file.path("testdir2")
dd
dir.create(file.path("testdir2"))
devtools::document()
devtools::load_all()
Run_RothC_VLC()
load_all()
Run_RothC_VLC()
devtools::document()
devtools::load_all()
Run_RothC_VLC()
load_all()
Run_RothC_VLC()
document()
load_all()
Run_RothC_VLC()
document()
load_all()
Run_RothC_VLC()
document()
load_all()
Run_RothC_VLC()
devtools::document()
devtools::document()
load_all()
devtools::document()
devtools::document()
devtools::document()
devtools::load_all()
Set_Temp()
Set_Precip()
Set_Evp()
SoilR2.0::Run_RothC_VLC()
Run_RothC_VLN()
SoilR2.0::Merge_VXP()
devtools::document()
devtools::load_all()
Set_Temp()
View(Temp)
files <- list.files("VXC_Models")
files
list.files("VXC_Models")
ls("VXC_Models")
ls(pattern = "VXC_Models^csv")
path_to_xlsx_files <- "VXC_Models"
xlsx_data <- import_xlsx_files(path_to_xlsx_files)
source("import_xlsx_files.R")
devtools::document()
devtools::load_all()
path_to_xlsx_files <- "VXC_Models"
xlsx_data <- import_xlsx_files(path_to_xlsx_files)
View(xlsx_data)
# Filter the list to include only data frames from the global environment
Model_list_VC <- purrr::keep(Model_list_VC, ~ exists(.x, envir = .GlobalEnv) && is.data.frame(get(.x, envir = .GlobalEnv)))
Model_list_VC <- list(
#VXC Models; Litter, Conventional Tillage, 0-100% (+10%) Clay
ModelDFSL_VLC0C,
ModelDFSL_VLC1C,
ModelDFSL_VLC2C,
ModelDFSL_VLC3C,
ModelDFSL_VLC4C,
ModelDFSL_VLC5C,
ModelDFSL_VLC6C,
ModelDFSL_VLC7C,
ModelDFSL_VLC8C,
ModelDFSL_VLC9C,
ModelDFSL_VLC10C,
#VXC Models; Litter, Reduced Tillage, 0-100% (+10%) Clay
ModelDFSL_VLR0C,
ModelDFSL_VLR1C,
ModelDFSL_VLR2C,
ModelDFSL_VLR3C,
ModelDFSL_VLR4C,
ModelDFSL_VLR5C,
ModelDFSL_VLR6C,
ModelDFSL_VLR7C,
ModelDFSL_VLR8C,
ModelDFSL_VLR9C,
ModelDFSL_VLR10C,
#VXC Models; Litter, No Tillage, 0-100% (+10%) Clay
ModelDFSL_VLN0C,
ModelDFSL_VLN1C,
ModelDFSL_VLN2C,
ModelDFSL_VLN3C,
ModelDFSL_VLN4C,
ModelDFSL_VLN5C,
ModelDFSL_VLN6C,
ModelDFSL_VLN7C,
ModelDFSL_VLN8C,
ModelDFSL_VLN9C,
ModelDFSL_VLN10C,
#VXC Models; Litter, Conventional Tillage, 0-100% (+10%) Clay
ModelDFSL_VMC0C,
ModelDFSL_VMC1C,
ModelDFSL_VMC2C,
ModelDFSL_VMC3C,
ModelDFSL_VMC4C,
ModelDFSL_VMC5C,
ModelDFSL_VMC6C,
ModelDFSL_VMC7C,
ModelDFSL_VMC8C,
ModelDFSL_VMC9C,
ModelDFSL_VMC10C,
#VXC Models; Litter, Reduced Tillage, 0-100% (+10%) Clay
ModelDFSL_VMR0C,
ModelDFSL_VMR1C,
ModelDFSL_VMR2C,
ModelDFSL_VMR3C,
ModelDFSL_VMR4C,
ModelDFSL_VMR5C,
ModelDFSL_VMR6C,
ModelDFSL_VMR7C,
ModelDFSL_VMR8C,
ModelDFSL_VMR9C,
ModelDFSL_VMR10C,
#VXC Models; Litter, No Tillage, 0-100% (+10%) Clay
ModelDFSL_VMN0C,
ModelDFSL_VMN1C,
ModelDFSL_VMN2C,
ModelDFSL_VMN3C,
ModelDFSL_VMN4C,
ModelDFSL_VMN5C,
ModelDFSL_VMN6C,
ModelDFSL_VMN7C,
ModelDFSL_VMN8C,
ModelDFSL_VMN9C,
ModelDFSL_VMN10C
)
devtools::document()
devtools::document()
load_all()
devtools::load_all()
Set_Temp()
Set_Precip()
Set_Evp()
Run_RothC_All(Scope = "VLC")
devtools::document()
devtools::load_all()
Run_RothC_All(VLC, 20)
Run_RothC_All("VLC", 20)
devtools::document()
devtools::load_all()
Run_RothC_All("VMN")
Run_RothC_All("VLC")
devtools::document()
devtools::load_all()
