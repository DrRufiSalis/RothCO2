Merged_File <<- Merged_File
tonCy <- as.data.frame(tonCy)
# Final_File <- cbind(tonCy, Merged_File)
first <- 0   # 1 means add NA to top of shorter vector
# 0 means add NA to bottom of shorter vector
if(length(tonCMerged_File)<length(Merged_File)) {
if(first==1) tonCMerged_File = c(rep(NA, length(Merged_File)-length(tonCMerged_File)),tonCMerged_File);Merged_File=Merged_File
if(first==0) tonCMerged_File = c(tonCMerged_File,rep(NA, length(Merged_File)-length(tonCMerged_File)));Merged_File=Merged_File
}
if(length(Merged_File)<length(tonCMerged_File)) {
if(first==1) Merged_File = c(rep(NA, length(tonCMerged_File)-length(Merged_File)),Merged_File);tonCMerged_File=tonCMerged_File
if(first==0) Merged_File = c(Merged_File,rep(NA, length(tonCMerged_File)-length(Merged_File)));tonCMerged_File=tonCMerged_File
}
Final_File <- cbind(tonCy,Merged_File)
Final_File <<- Final_File
}
tonCy_V <- c(1,3,6,8,10)
Dynamic_CT(VLC4, tonCy = tonCy_V)
View(Merged_File)
Dynamic_CT <- function(Mod_Comb, #Model Combination
tonCy, #Vector with Tons of C added each year
Import = "XLSX") #Import format: XLSX or CSV
{
if(Import == "XLSX"){
Merged_File <- read_excel("MergedModels/MergedModels_VP_YCT.xlsx")
}
else if(Import == "CSV"){
Merged_File <- read.csv("MergedModels/MergedModels_VP_YCT.csv")
Merged_File <- Merged_File[,-1]
}
#Keep only the Model Comb name in the columns
foo <- function(x) gsub("^[^_]*_", "", x)
Merged_File <- Merged_File %>% rename_all(foo)
#Select only the column that coincides with the Model Combination specified by the user
Merged_File <- Merged_File %>% select(Mod_Comb)
colnames(Merged_File) <- "Year_0"
#Extract the number of rows to obtain the simulation length
SL_years <- as.integer(nrow(Merged_File))
#Loop Lag to Dynamize Tails
for (i in 1:SL_years) {
Merged_File[nrow(Merged_File) + 1, ] <- NA
Merged_File[paste0("Year_", i)] <- dplyr::lag(Merged_File$Year_0, n = i)
}
#NAs to 0s
Merged_File[is.na(Merged_File)] <- 0
Merged_File <<- Merged_File
tonCy <- as.data.frame(tonCy)
# Final_File <- cbind(tonCy, Merged_File)
first <- 0   # 1 means add NA to top of shorter vector
# 0 means add NA to bottom of shorter vector
if(length(tonCy)<length(Merged_File)) {
if(first==1) tonCy = c(rep(NA, length(Merged_File)-length(tonCy)),tonCy);Merged_File=Merged_File
if(first==0) tonCy = c(tonCy,rep(NA, length(Merged_File)-length(tonCy)));Merged_File=Merged_File
}
if(length(Merged_File)<length(tonCy)) {
if(first==1) Merged_File = c(rep(NA, length(tonCy)-length(Merged_File)),Merged_File);tonCy=tonCy
if(first==0) Merged_File = c(Merged_File,rep(NA, length(tonCy)-length(Merged_File)));tonCy=tonCy
}
Final_File <- cbind(tonCy,Merged_File)
Final_File <<- Final_File
}
tonCy_V <- c(1,3,6,8,10)
Dynamic_CT("VLC3", tonCy_V, "XLSX")
View(Final_File)
Dynamic_CT <- function(Mod_Comb, #Model Combination
tonCy, #Vector with Tons of C added each year
Import = "XLSX") #Import format: XLSX or CSV
{
if(Import == "XLSX"){
Merged_File <- read_excel("MergedModels/MergedModels_VP_YCT.xlsx")
}
else if(Import == "CSV"){
Merged_File <- read.csv("MergedModels/MergedModels_VP_YCT.csv")
Merged_File <- Merged_File[,-1]
}
#Keep only the Model Comb name in the columns
foo <- function(x) gsub("^[^_]*_", "", x)
Merged_File <- Merged_File %>% rename_all(foo)
#Select only the column that coincides with the Model Combination specified by the user
Merged_File <- Merged_File %>% select(Mod_Comb)
colnames(Merged_File) <- "Year_0"
#Extract the number of rows to obtain the simulation length
SL_years <- as.integer(nrow(Merged_File))
#Loop Lag to Dynamize Tails
for (i in 1:SL_years) {
Merged_File[nrow(Merged_File) + 1, ] <- NA
Merged_File[paste0("Year_", i)] <- dplyr::lag(Merged_File$Year_0, n = i)
}
#NAs to 0s
Merged_File[is.na(Merged_File)] <- 0
Merged_File <<- Merged_File
tonCy <- as.data.frame(tonCy)
# Final_File <- cbind(tonCy, Merged_File)
End_SL <- as.integer(nrow(Merged_File))
tonCy <- lapply(tonCy, `length<-`, End_SL)
tonCy <<- tonCy
Final_File <<- Final_File
}
tonCy_V <- c(1,3,6,8,10)
Dynamic_CT("VLC3", tonCy_V, "XLSX")
View(tonCy)
View(Final_File)
Dynamic_CT <- function(Mod_Comb, #Model Combination
tonCy, #Vector with Tons of C added each year
Import = "XLSX") #Import format: XLSX or CSV
{
if(Import == "XLSX"){
Merged_File <- read_excel("MergedModels/MergedModels_VP_YCT.xlsx")
}
else if(Import == "CSV"){
Merged_File <- read.csv("MergedModels/MergedModels_VP_YCT.csv")
Merged_File <- Merged_File[,-1]
}
#Keep only the Model Comb name in the columns
foo <- function(x) gsub("^[^_]*_", "", x)
Merged_File <- Merged_File %>% rename_all(foo)
#Select only the column that coincides with the Model Combination specified by the user
Merged_File <- Merged_File %>% select(Mod_Comb)
colnames(Merged_File) <- "Year_0"
#Extract the number of rows to obtain the simulation length
SL_years <- as.integer(nrow(Merged_File))
#Loop Lag to Dynamize Tails
for (i in 1:SL_years) {
Merged_File[nrow(Merged_File) + 1, ] <- NA
Merged_File[paste0("Year_", i)] <- dplyr::lag(Merged_File$Year_0, n = i)
}
#NAs to 0s
Merged_File[is.na(Merged_File)] <- 0
Merged_File <<- Merged_File
# tonCy <- as.data.frame(tonCy)
# Final_File <- cbind(tonCy, Merged_File)
End_SL <- as.integer(nrow(Merged_File))
tonCy <- lapply(tonCy, `length<-`, End_SL)
tonCy <- as.data.frame(tonCy)
tonCy <<- tonCy
Final_File <<- Final_File
}
tonCy_V <- c(1,3,6,8,10)
Dynamic_CT("VLC3", tonCy_V, "XLSX")
View(tonCy)
Dynamic_CT <- function(Mod_Comb, #Model Combination
tonCy, #Vector with Tons of C added each year
Import = "XLSX") #Import format: XLSX or CSV
{
if(Import == "XLSX"){
Merged_File <- read_excel("MergedModels/MergedModels_VP_YCT.xlsx")
}
else if(Import == "CSV"){
Merged_File <- read.csv("MergedModels/MergedModels_VP_YCT.csv")
Merged_File <- Merged_File[,-1]
}
#Keep only the Model Comb name in the columns
foo <- function(x) gsub("^[^_]*_", "", x)
Merged_File <- Merged_File %>% rename_all(foo)
#Select only the column that coincides with the Model Combination specified by the user
Merged_File <- Merged_File %>% select(Mod_Comb)
colnames(Merged_File) <- "Year_0"
#Extract the number of rows to obtain the simulation length
SL_years <- as.integer(nrow(Merged_File))
#Loop Lag to Dynamize Tails
for (i in 1:SL_years) {
Merged_File[nrow(Merged_File) + 1, ] <- NA
Merged_File[paste0("Year_", i)] <- dplyr::lag(Merged_File$Year_0, n = i)
}
#NAs to 0s
Merged_File[is.na(Merged_File)] <- 0
Merged_File <<- Merged_File
tonCy <- as.data.frame(tonCy)
# Final_File <- cbind(tonCy, Merged_File)
Final_File <- bind_cols(tonCy, Merged_File)
Final_File <<- Final_File
}
tonCy_V <- c(1,3,6,8,10)
Dynamic_CT("VLC3", tonCy_V, "XLSX")
rlang::last_trace()
View(Final_File)
install.packages("qpcR")
Dynamic_CT <- function(Mod_Comb, #Model Combination
tonCy, #Vector with Tons of C added each year
Import = "XLSX") #Import format: XLSX or CSV
{
if(Import == "XLSX"){
Merged_File <- read_excel("MergedModels/MergedModels_VP_YCT.xlsx")
}
else if(Import == "CSV"){
Merged_File <- read.csv("MergedModels/MergedModels_VP_YCT.csv")
Merged_File <- Merged_File[,-1]
}
#Keep only the Model Comb name in the columns
foo <- function(x) gsub("^[^_]*_", "", x)
Merged_File <- Merged_File %>% rename_all(foo)
#Select only the column that coincides with the Model Combination specified by the user
Merged_File <- Merged_File %>% select(Mod_Comb)
colnames(Merged_File) <- "Year_0"
#Extract the number of rows to obtain the simulation length
SL_years <- as.integer(nrow(Merged_File))
#Loop Lag to Dynamize Tails
for (i in 1:SL_years) {
Merged_File[nrow(Merged_File) + 1, ] <- NA
Merged_File[paste0("Year_", i)] <- dplyr::lag(Merged_File$Year_0, n = i)
}
#NAs to 0s
Merged_File[is.na(Merged_File)] <- 0
Merged_File <<- Merged_File
tonCy <- as.data.frame(tonCy)
# Final_File <- cbind(tonCy, Merged_File)
Final_File <- cbind.na(tonCy, Merged_File)
Final_File <<- Final_File
}
tonCy_V <- c(1,3,6,8,10)
Dynamic_CT("VLC3", tonCy_V, "XLSX")
library(qpcR)
Dynamic_CT <- function(Mod_Comb, #Model Combination
tonCy, #Vector with Tons of C added each year
Import = "XLSX") #Import format: XLSX or CSV
{
if(Import == "XLSX"){
Merged_File <- read_excel("MergedModels/MergedModels_VP_YCT.xlsx")
}
else if(Import == "CSV"){
Merged_File <- read.csv("MergedModels/MergedModels_VP_YCT.csv")
Merged_File <- Merged_File[,-1]
}
#Keep only the Model Comb name in the columns
foo <- function(x) gsub("^[^_]*_", "", x)
Merged_File <- Merged_File %>% rename_all(foo)
#Select only the column that coincides with the Model Combination specified by the user
Merged_File <- Merged_File %>% select(Mod_Comb)
colnames(Merged_File) <- "Year_0"
#Extract the number of rows to obtain the simulation length
SL_years <- as.integer(nrow(Merged_File))
#Loop Lag to Dynamize Tails
for (i in 1:SL_years) {
Merged_File[nrow(Merged_File) + 1, ] <- NA
Merged_File[paste0("Year_", i)] <- dplyr::lag(Merged_File$Year_0, n = i)
}
#NAs to 0s
Merged_File[is.na(Merged_File)] <- 0
Merged_File <<- Merged_File
tonCy <- as.data.frame(tonCy)
# Final_File <- cbind(tonCy, Merged_File)
Final_File <- cbind.na(tonCy, Merged_File)
Final_File <<- Final_File
}
tonCy_V <- c(1,3,6,8,10)
Dynamic_CT("VLC3", tonCy_V, "XLSX")
View(Final_File)
View(tonCy)
Dynamic_CT <- function(Mod_Comb, #Model Combination
tonCy, #Vector with Tons of C added each year
Import = "XLSX") #Import format: XLSX or CSV
{
if(Import == "XLSX"){
Merged_File <- read_excel("MergedModels/MergedModels_VP_YCT.xlsx")
}
else if(Import == "CSV"){
Merged_File <- read.csv("MergedModels/MergedModels_VP_YCT.csv")
Merged_File <- Merged_File[,-1]
}
#Keep only the Model Comb name in the columns
foo <- function(x) gsub("^[^_]*_", "", x)
Merged_File <- Merged_File %>% rename_all(foo)
#Select only the column that coincides with the Model Combination specified by the user
Merged_File <- Merged_File %>% select(Mod_Comb)
colnames(Merged_File) <- "Year_0"
#Extract the number of rows to obtain the simulation length
SL_years <- as.integer(nrow(Merged_File))
#Loop Lag to Dynamize Tails
for (i in 1:SL_years) {
Merged_File[nrow(Merged_File) + 1, ] <- NA
Merged_File[paste0("Year_", i)] <- dplyr::lag(Merged_File$Year_0, n = i)
}
#NAs to 0s
Merged_File[is.na(Merged_File)] <- 0
Merged_File <<- Merged_File
tonCy <- as.data.frame(tonCy)
# Final_File <- cbind(tonCy, Merged_File)
Final_File <- merge(tonCy, Merged_File)
Final_File <<- Final_File
}
tonCy_V <- c(1,3,6,8,10)
Dynamic_CT("VLC3", tonCy_V, "XLSX")
Dynamic_CT <- function(Mod_Comb = "VLC3", #Model Combination
tonCy, #Vector with Tons of C added each year
Import = "XLSX") #Import format: XLSX or CSV
{
if(Import == "XLSX"){
Merged_File <- read_excel("MergedModels/MergedModels_VP_YCT.xlsx")
}
else if(Import == "CSV"){
Merged_File <- read.csv("MergedModels/MergedModels_VP_YCT.csv")
Merged_File <- Merged_File[,-1]
}
#Keep only the Model Comb name in the columns
foo <- function(x) gsub("^[^_]*_", "", x)
Merged_File <- Merged_File %>% rename_all(foo)
#Select only the column that coincides with the Model Combination specified by the user
Merged_File <- Merged_File %>% select(Mod_Comb)
colnames(Merged_File) <- "Year_0"
#Extract the number of rows to obtain the simulation length
SL_years <- as.integer(nrow(Merged_File))
#Loop Lag to Dynamize Tails
for (i in 1:SL_years) {
Merged_File[nrow(Merged_File) + 1, ] <- NA
Merged_File[paste0("Year_", i)] <- dplyr::lag(Merged_File$Year_0, n = i)
}
#NAs to 0s
Merged_File[is.na(Merged_File)] <- 0
Merged_File <<- Merged_File
tonCy <- as.data.frame(tonCy)
# Final_File <- cbind(tonCy, Merged_File)
Final_File <- merge(tonCy, Merged_File)
Final_File <<- Final_File
}
tonCy_V <- c(1,3,6,8,10)
Dynamic_CT("VLC3", tonCy_V, "XLSX")
Mod_Comb = "VLC3"
#Keep only the Model Comb name in the columns
foo <- function(x) gsub("^[^_]*_", "", x)
Merged_File <- Merged_File %>% rename_all(foo)
View(Merged_File)
Merged_File <- read_excel("MergedModels/MergedModels_VP_YCT.xlsx")
foo <- function(x) gsub("^[^_]*_", "", x)
Merged_File <- Merged_File %>% rename_all(foo)
View(Merged_File)
Merged_File <- Merged_File %>% select(Mod_Comb)
detach("package:qpcR", unload = TRUE)
Dynamic_CT <- function(Mod_Comb = "VLC3", #Model Combination
tonCy, #Vector with Tons of C added each year
Import = "XLSX") #Import format: XLSX or CSV
{
if(Import == "XLSX"){
Merged_File <- read_excel("MergedModels/MergedModels_VP_YCT.xlsx")
}
else if(Import == "CSV"){
Merged_File <- read.csv("MergedModels/MergedModels_VP_YCT.csv")
Merged_File <- Merged_File[,-1]
}
#Keep only the Model Comb name in the columns
foo <- function(x) gsub("^[^_]*_", "", x)
Merged_File <- Merged_File %>% rename_all(foo)
#Select only the column that coincides with the Model Combination specified by the user
Merged_File <- Merged_File %>% dplyr::select(Mod_Comb)
colnames(Merged_File) <- "Year_0"
#Extract the number of rows to obtain the simulation length
SL_years <- as.integer(nrow(Merged_File))
#Loop Lag to Dynamize Tails
for (i in 1:SL_years) {
Merged_File[nrow(Merged_File) + 1, ] <- NA
Merged_File[paste0("Year_", i)] <- dplyr::lag(Merged_File$Year_0, n = i)
}
#NAs to 0s
Merged_File[is.na(Merged_File)] <- 0
Merged_File <<- Merged_File
tonCy <- as.data.frame(tonCy)
# Final_File <- cbind(tonCy, Merged_File)
Final_File <- merge(tonCy, Merged_File)
Final_File <<- Final_File
}
tonCy_V <- c(1,3,6,8,10)
Dynamic_CT("VLC3", tonCy_V, "XLSX")
View(Merged_File)
View(Final_File)
tonCy <- as.data.frame(tonCy_V)
Final_File <- merge(tonCy, Merged_File)
Dynamic_CT <- function(Mod_Comb = "VLC3", #Model Combination
tonCy, #Vector with Tons of C added each year
Import = "XLSX") #Import format: XLSX or CSV
{
if(Import == "XLSX"){
Merged_File <- read_excel("MergedModels/MergedModels_VP_YCT.xlsx")
}
else if(Import == "CSV"){
Merged_File <- read.csv("MergedModels/MergedModels_VP_YCT.csv")
Merged_File <- Merged_File[,-1]
}
#Keep only the Model Comb name in the columns
foo <- function(x) gsub("^[^_]*_", "", x)
Merged_File <- Merged_File %>% rename_all(foo)
#Select only the column that coincides with the Model Combination specified by the user
Merged_File <- Merged_File %>% dplyr::select(Mod_Comb)
colnames(Merged_File) <- "Year_0"
#Extract the number of rows to obtain the simulation length
SL_years <- as.integer(nrow(Merged_File))
#Loop Lag to Dynamize Tails
for (i in 1:SL_years) {
Merged_File[nrow(Merged_File) + 1, ] <- NA
Merged_File[paste0("Year_", i)] <- dplyr::lag(Merged_File$Year_0, n = i)
}
#NAs to 0s
Merged_File[is.na(Merged_File)] <- 0
Merged_File <<- Merged_File
tonCy <- as.data.frame(tonCy)
# Final_File <- cbind(tonCy, Merged_File)
# creating the column id for dataframe 1
Merged_File = cbind("id"=rownames(Merged_File),Merged_File)
# creating column id for dataframe 2
tonCy = cbind("id"=rownames(tonCy),tonCy)
Final_File <- merge(tonCy,Merged_File,all=T)
Final_File <<- Final_File
}
tonCy_V <- c(1,3,6,8,10)
Dynamic_CT("VLC3", tonCy_V, "XLSX")
View(Final_File)
Merged_File = cbind("id"=rownames(Merged_File),Merged_File)
View(Merged_File)
tonCy <- as.data.frame(tonCy_V)
# creating column id for dataframe 2
tonCy = cbind("id"=rownames(tonCy),tonCy)
View(tonCy)
Final_File <- merge(tonCy,Merged_File,by="id",all=T)
View(Final_File)
sapply(Merged_File, class)
# creating the column id for dataframe 1
Merged_File = cbind("id"=rownames(Merged_File),Merged_File)
Merged_File$id <- as.numeric(as.character(Merged_File$id))
# creating column id for dataframe 2
tonCy = cbind("id"=rownames(tonCy),tonCy)
tonCy$id <- as.numeric(as.character(tonCy$id))
Final_File <- merge(tonCy,Merged_File,by="id",all=T)
Final_File <- merge(tonCy,Merged_File,all=T)
View(Final_File)
tonCy <- as.data.frame(tonCy_V)
# Final_File <- cbind(tonCy, Merged_File)
# creating the column id for dataframe 1
Merged_File = cbind("id"=rownames(Merged_File),Merged_File)
# creating column id for dataframe 2
tonCy = cbind("id"=rownames(tonCy),tonCy)
Final_File <- merge(tonCy,Merged_File,all=T)
View(Merged_File)
Merged_File <- read_excel("MergedModels/MergedModels_VP_YCT.xlsx")
#Keep only the Model Comb name in the columns
foo <- function(x) gsub("^[^_]*_", "", x)
Merged_File <- Merged_File %>% rename_all(foo)
#Select only the column that coincides with the Model Combination specified by the user
Merged_File <- Merged_File %>% dplyr::select(Mod_Comb)
colnames(Merged_File) <- "Year_0"
#Extract the number of rows to obtain the simulation length
SL_years <- as.integer(nrow(Merged_File))
#Loop Lag to Dynamize Tails
for (i in 1:SL_years) {
Merged_File[nrow(Merged_File) + 1, ] <- NA
Merged_File[paste0("Year_", i)] <- dplyr::lag(Merged_File$Year_0, n = i)
}
#NAs to 0s
Merged_File[is.na(Merged_File)] <- 0
tonCy <- as.data.frame(tonCy_V)
Merged_File = cbind("id"=rownames(Merged_File),Merged_File)
# creating column id for dataframe 2
tonCy = cbind("id"=rownames(tonCy),tonCy)
Final_File <- merge(tonCy,Merged_File,by="id",all=T)
Final_File$id <- as.numeric(as.character(Final_File$id))
View(Final_File)
Final_File <- Final_File[order(Final_File$id),]
View(Final_File)
View(Merged_File)
View(tonCy)
Final_File[is.na(Final_File)] <- 0
View(Final_File)
devtools::document()
devtools::document()
devtools::load_all()
shiny::runApp()
runApp()
library(shiny)
library(rsconnect)
runExample("10_download")
ui <- fluidPage(
# App title ----
titlePanel("RothCO2 Data Downloader"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Choose dataset ----
selectInput("dataset", "Choose a dataset:",
choices = c("rock", "pressure", "cars")),
# Button
downloadButton("downloadData", "Download")
),
# Main panel for displaying outputs ----
mainPanel(
tableOutput("table")
)
)
)
#### Server ####
server <- function(input, output) {
# Reactive value for selected dataset ----
datasetInput <- reactive({
switch(input$dataset,
"rock" = rock,
"pressure" = pressure,
"cars" = cars)
})
# Table of selected dataset ----
output$table <- renderTable({
datasetInput()
})
# Downloadable csv of selected dataset ----
output$downloadData <- downloadHandler(
filename = function() {
paste(input$dataset, ".csv", sep = "")
},
content = function(file) {
write.csv(datasetInput(), file, row.names = FALSE)
}
)
}
RothCO2_Downloader <- shinyApp(ui, server)
RothCO2_Downloader
runApp()
